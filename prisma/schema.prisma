// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Spot {
  id            String     @default(cuid()) @id
  owner         User?   @relation(fields: [ownerId], references: [id])
  ownerId       String?
  address       String
  city          String
  state         String
  country       String
  lat           String
  lng           String
  name          String
  discription   String
  price         String
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  reviews       Review[]
  bookings      Booking[]
  spotImages    SpotImage[]
}

model SpotImage {
  id            String    @default(cuid()) @id
  spot          Spot?     @relation(fields: [spotId], references: [id])
  spotId        String?
  url           String
  preview       Boolean
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
}

model Booking {
  id            String       @default(cuid()) @id
  spot          Spot?        @relation(fields: [spotId], references: [id])
  spotId        String
  user          User?        @relation(fields: [userId], references: [id])
  userId        String
  startDate     DateTime    @db.Date
  endDate       DateTime    @db.Date
  createdAt     DateTime     @default(now()) @map(name: "created_at")
  updatedAt     DateTime     @updatedAt @map(name: "updated_at")
}

model Review {
  id            String       @default(cuid()) @id
  spot          Spot?        @relation(fields: [spotId], references: [id])
  spotId        String?
  user          User?        @relation(fields: [userId], references: [id])
  userId        String
  stars         String
  text          String
  createdAt     DateTime     @default(now()) @map(name: "created_at")
  updatedAt     DateTime     @updatedAt @map(name: "updated_at")
  reviewImages  ReviewImage[]
}

model ReviewImage {
  id            String       @default(cuid()) @id
  review        Review?      @relation(fields: [reviewId], references: [id])
  reviewId      String?
  url           String
  createdAt     DateTime     @default(now()) @map(name: "created_at")
  updatedAt     DateTime     @updatedAt @map(name: "updated_at")
}

model User {
  id            String       @default(cuid()) @id
  firstName      String?
  lastName      String?
  username      String?   @unique
  email         String?   @unique
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  spots         Spot[]
  reviews       Review[]
  bookings      Booking[]
  @@map(name: "users")
}
